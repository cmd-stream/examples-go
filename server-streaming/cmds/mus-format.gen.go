// Code generated by musgen-go. DO NOT EDIT.

package cmds

import (
	"fmt"

	"github.com/cmd-stream/core-go"
	"github.com/cmd-stream/examples-go/hello-world/receiver"
	dts "github.com/mus-format/dts-stream-go"
	muss "github.com/mus-format/mus-stream-go"
	"github.com/mus-format/mus-stream-go/ord"
)

var SayFancyHelloMultiCmdMUS = sayFancyHelloMultiCmdMUS{}

type sayFancyHelloMultiCmdMUS struct{}

func (s sayFancyHelloMultiCmdMUS) Marshal(v SayFancyHelloMultiCmd, w muss.Writer) (n int, err error) {
	return ord.String.Marshal(v.str, w)
}

func (s sayFancyHelloMultiCmdMUS) Unmarshal(r muss.Reader) (v SayFancyHelloMultiCmd, n int, err error) {
	v.str, n, err = ord.String.Unmarshal(r)
	return
}

func (s sayFancyHelloMultiCmdMUS) Size(v SayFancyHelloMultiCmd) (size int) {
	return ord.String.Size(v.str)
}

func (s sayFancyHelloMultiCmdMUS) Skip(r muss.Reader) (n int, err error) {
	n, err = ord.String.Skip(r)
	return
}

var SayFancyHelloMultiCmdDTS = dts.New[SayFancyHelloMultiCmd](SayFancyHelloMultiCmdDTM, SayFancyHelloMultiCmdMUS)

var CmdMUS = cmdMUS{}

type cmdMUS struct{}

func (s cmdMUS) Marshal(v core.Cmd[receiver.Greeter], w muss.Writer) (n int, err error) {
	switch t := v.(type) {
	case SayFancyHelloMultiCmd:
		return SayFancyHelloMultiCmdDTS.Marshal(t, w)
	default:
		panic(fmt.Sprintf("unexpected %v type", t))
	}
}

func (s cmdMUS) Unmarshal(r muss.Reader) (v core.Cmd[receiver.Greeter], n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(r)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case SayFancyHelloMultiCmdDTM:
		v, n1, err = SayFancyHelloMultiCmdDTS.UnmarshalData(r)
	default:
		err = fmt.Errorf("unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}

func (s cmdMUS) Size(v core.Cmd[receiver.Greeter]) (size int) {
	switch t := v.(type) {
	case SayFancyHelloMultiCmd:
		return SayFancyHelloMultiCmdDTS.Size(t)
	default:
		panic(fmt.Sprintf("unexpected %v type", t))
	}
}

func (s cmdMUS) Skip(r muss.Reader) (n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(r)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case SayFancyHelloMultiCmdDTM:
		n1, err = SayFancyHelloMultiCmdDTS.SkipData(r)
	default:
		err = fmt.Errorf("unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}
