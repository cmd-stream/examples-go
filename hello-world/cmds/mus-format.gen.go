// Code generated by musgen-go. DO NOT EDIT.

package cmds

import (
	"fmt"

	"github.com/cmd-stream/core-go"
	"github.com/cmd-stream/examples-go/hello-world/receiver"
	com "github.com/mus-format/common-go"
	dts "github.com/mus-format/dts-stream-go"
	mus "github.com/mus-format/mus-stream-go"
	strops "github.com/mus-format/mus-stream-go/options/string"
	"github.com/mus-format/mus-stream-go/ord"
)

const (
	SayHelloCmdDTM com.DTM = iota + 1
	SayFancyHelloCmdDTM
)

var (
	string6ΣpNH2vVpMrslPPDKNWvGwΞΞ = ord.NewValidStringSer(strops.WithLenValidator(com.ValidatorFn[int](ValidateLength)))
)

var SayHelloCmdMUS = sayHelloCmdMUS{}

type sayHelloCmdMUS struct{}

func (s sayHelloCmdMUS) Marshal(v SayHelloCmd, w mus.Writer) (n int, err error) {
	return string6ΣpNH2vVpMrslPPDKNWvGwΞΞ.Marshal(v.str, w)
}

func (s sayHelloCmdMUS) Unmarshal(r mus.Reader) (v SayHelloCmd, n int, err error) {
	v.str, n, err = string6ΣpNH2vVpMrslPPDKNWvGwΞΞ.Unmarshal(r)
	return
}

func (s sayHelloCmdMUS) Size(v SayHelloCmd) (size int) {
	return string6ΣpNH2vVpMrslPPDKNWvGwΞΞ.Size(v.str)
}

func (s sayHelloCmdMUS) Skip(r mus.Reader) (n int, err error) {
	n, err = string6ΣpNH2vVpMrslPPDKNWvGwΞΞ.Skip(r)
	return
}

var SayHelloCmdDTS = dts.New[SayHelloCmd](SayHelloCmdDTM, SayHelloCmdMUS)

var SayFancyHelloCmdMUS = sayFancyHelloCmdMUS{}

type sayFancyHelloCmdMUS struct{}

func (s sayFancyHelloCmdMUS) Marshal(v SayFancyHelloCmd, w mus.Writer) (n int, err error) {
	return string6ΣpNH2vVpMrslPPDKNWvGwΞΞ.Marshal(v.str, w)
}

func (s sayFancyHelloCmdMUS) Unmarshal(r mus.Reader) (v SayFancyHelloCmd, n int, err error) {
	v.str, n, err = string6ΣpNH2vVpMrslPPDKNWvGwΞΞ.Unmarshal(r)
	return
}

func (s sayFancyHelloCmdMUS) Size(v SayFancyHelloCmd) (size int) {
	return string6ΣpNH2vVpMrslPPDKNWvGwΞΞ.Size(v.str)
}

func (s sayFancyHelloCmdMUS) Skip(r mus.Reader) (n int, err error) {
	n, err = string6ΣpNH2vVpMrslPPDKNWvGwΞΞ.Skip(r)
	return
}

var SayFancyHelloCmdDTS = dts.New[SayFancyHelloCmd](SayFancyHelloCmdDTM, SayFancyHelloCmdMUS)

var CmdMUS = cmdMUS{}

type cmdMUS struct{}

func (s cmdMUS) Marshal(v core.Cmd[receiver.Greeter], w mus.Writer) (n int, err error) {
	switch t := v.(type) {
	case SayHelloCmd:
		return SayHelloCmdDTS.Marshal(t, w)
	case SayFancyHelloCmd:
		return SayFancyHelloCmdDTS.Marshal(t, w)
	default:
		panic(fmt.Sprintf(com.ErrorPrefix+"unexpected %v type", t))
	}
}

func (s cmdMUS) Unmarshal(r mus.Reader) (v core.Cmd[receiver.Greeter], n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(r)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case SayHelloCmdDTM:
		v, n1, err = SayHelloCmdDTS.UnmarshalData(r)
	case SayFancyHelloCmdDTM:
		v, n1, err = SayFancyHelloCmdDTS.UnmarshalData(r)
	default:
		err = fmt.Errorf(com.ErrorPrefix+"unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}

func (s cmdMUS) Size(v core.Cmd[receiver.Greeter]) (size int) {
	switch t := v.(type) {
	case SayHelloCmd:
		return SayHelloCmdDTS.Size(t)
	case SayFancyHelloCmd:
		return SayFancyHelloCmdDTS.Size(t)
	default:
		panic(fmt.Sprintf(com.ErrorPrefix+"unexpected %v type", t))
	}
}

func (s cmdMUS) Skip(r mus.Reader) (n int, err error) {
	dtm, n, err := dts.DTMSer.Unmarshal(r)
	if err != nil {
		return
	}
	var n1 int
	switch dtm {
	case SayHelloCmdDTM:
		n1, err = SayHelloCmdDTS.SkipData(r)
	case SayFancyHelloCmdDTM:
		n1, err = SayFancyHelloCmdDTS.SkipData(r)
	default:
		err = fmt.Errorf(com.ErrorPrefix+"unexpected %v DTM", dtm)
		return
	}
	n += n1
	return
}
